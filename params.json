{"name":"Anglicisms","tagline":"Ruby scripts I created for investigating the text corpus in my bachelor's thesis where I analyzed anglicisms in French articles.","body":"﻿This repository contains Ruby scripts that can assist in analyzing words in plain text files containing French text.\r\n\r\nHere is a short description of what each script can be used for.\r\n\r\n## Classifying words\r\n\r\n### ClassifyInterestingWords.rb\r\n\r\n![ClassifyInterestingWords screenshot](http://peruukki.github.com/Anglicisms/images/screenshot-classify-interesting.png)\r\n\r\nUsage: `ruby ClassifyInterestingWords.rb <directory1> [<directory2> ...]`\r\n\r\nExample: `ruby ClassifyInterestingWords.rb corpus-example/25stanley_Montreal`\r\n\r\nOutput: `words.maybe` `words.no` `words.yes`\r\n\r\nAllows you to classify words based on whether they are interesting for further analysis. The script looks for text files with the `.txt` extension in the given directories, and asks you to classify each word in those files. It then puts each word into file `words.yes`, `words.maybe` or `words.no` in the current directory, depending on your choice. The script also creates backup files ending with `.bak`.\r\n\r\nPress `q` anytime to quit the script.\r\n\r\nThe created files are used as input for the `ClassifyLoanWords.rb` script, which handles the files in `words.yes` and `words.maybe` and ignores the words in `words.no`.\r\n\r\n### ClassifyLoanWords.rb\r\n\r\n![ClassifyLoanWords screenshot](http://peruukki.github.com/Anglicisms/images/screenshot-classify-loan.png)\r\n\r\nUsage: `ruby ClassifyLoanWords.rb <directory>`\r\n\r\nExample: `ruby ClassifyLoanWords.rb .`\r\n\r\nOutput: `words.direct` `words.translated` `words.original`\r\n\r\nAllows you to classify words based on what kind of loan words they are. The script goes through the words in `words.yes` and `words.maybe` files in the given directory, and asks you to classify each word as a \"direct\" (unmodified) loan, \"translated\" (modified) loan, or an \"original\" (not loaned) word. It then puts each word into file `words.direct`, `words.translated` or `words.original` in the current directory, depending on your choice.\r\n\r\nPress `q` anytime to quit the script.\r\n\r\nThe created files are used as input for the `FilterUniqueWords.rb` script, which handles the files in `words.direct` and `words.translated` and ignores the words in `words.original`.\r\n\r\n### FilterUniqueWords.rb\r\n\r\n![FilterUniqueWords screenshot](http://peruukki.github.com/Anglicisms/images/screenshot-filter-unique.png)\r\n\r\nUsage: `ruby FilterUniqueWords.rb <directory>`\r\n\r\nExample: `ruby FilterUniqueWords.rb .`\r\n\r\nOutput: `words.direct.filtered` `words.translated.filtered`\r\n\r\nCombines (filters out) different forms of a word to obtain a list of unique words. The script goes through the words in `words.direct` and `words.translated` files in the given directory, and combines the different forms (e.g. \"joue\" and \"jouent\") of each word on one line (e.g. \"joue, jouent\"). The results are written to files with the `.filtered` extension.\r\n\r\n## Counting words\r\n\r\n### CountFrequencies.rb\r\n\r\n![CountFrequencies screenshot](http://peruukki.github.com/Anglicisms/images/screenshot-count-frequencies.png)\r\n\r\nUsage: `ruby CountFrequencies.rb <directory1> [<directory2> ...]`\r\n\r\nExample: `ruby CountFrequencies.rb corpus-example/25stanley_Montreal corpus-example/LNH_Montreal`\r\n\r\nOutput: `.freq` file per each text file, `all.freq` for each directory\r\n\r\nCounts word frequencies in text files in given directories and the total word frequencies in each directory. The script looks for text files with the `.txt` extension in the given directories, and calculates word frequencies in each text file as well as in each directory. The frequencies are written into files with the `.freq` extension. The script tries its best to combine different forms of a word in its calculations.\r\n\r\n### CountWords.rb\r\n\r\n![CountWords screenshot](http://peruukki.github.com/Anglicisms/images/screenshot-count-words.png)\r\n\r\nUsage: `ruby CountWords.rb <directory1> [<directory2> ...]`\r\n\r\nExample: `ruby CountWords.rb corpus-example/25stanley_Montreal corpus-example/LNH_Montreal`\r\n\r\nOutput: Shows word counts on the terminal\r\n\r\nCounts the number of words in text files and the total counts in directories. The script looks for text files with the `.txt` extension in the given directories, and calculates how many words there are in each file as well as in each directory in total. Certain words with an apostrophe in them (\"d'abord\", \"d'affilée\", \"d'ailleurs\", \"d'autres\", \"d'habitude\", \"d'ici\", \"d'où\", and \"l'un\", see `lib/Helpers.rb`) are recognized as single words instead of two.\r\n\r\n## Finding words in their context\r\n\r\n### FindOccurrences.rb\r\n\r\n![FindOccurrences screenshot](http://peruukki.github.com/Anglicisms/images/screenshot-find-occurrences.png)\r\n\r\nUsage: `ruby FindOccurrences.rb <word> <surrounding word count> <directory1> [<directory2> ...]`\r\n\r\nExample: `ruby FindOccurrences.rb score 10 corpus-example/25stanley_Montreal`\r\n\r\nOutput: Shows word occurrences on the terminal\r\n\r\nShows the occurrences of a word in all its contexts in the text files. The script looks for text files with the `.txt` extension in the given directories, and shows the given word and the given surrounding word amount of words preceding and following it. The script is useful for checking all the contexts in which a particular word is used.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}